/**
 * Copyright (c) 2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 * This generated code and related technologies are covered by patents
 * or patents pending by Appcelerator, Inc.
 */

// WARNING: this file is generated and will be overwritten
// Generated on <%=new Date%>

/**
 * JSC implementation for <%=framework%> globals
 */
@import Foundation;
@import JavaScriptCore;
@import <%=framework%>;
<% autoimports.forEach(function(i) { -%>
#import <<%=i%>>
<% }) %>

<% symbols.forEach(function(symbol) { %>
JSValueRef <%- symbol.name %>For<%=framework%> (JSContextRef ctx, JSObjectRef function, JSObjectRef object, size_t argumentCount, const JSValueRef arguments[], JSValueRef* exception);
<% }) %>

// define any externs referenced in this implementation
<% externs.forEach(function(extern) { -%>
extern JSClassRef <%=extern%>Def;
<% }) %>

// types we use
<% makers.forEach(function(name) { -%>
extern JSObjectRef MakeObjectFor<%=name%>(JSContextRef, <%=name%>*);
<% }) %>

