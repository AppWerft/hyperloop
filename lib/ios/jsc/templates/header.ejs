/**
 * Copyright (c) 2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 * This generated code and related technologies are covered by patents
 * or patents pending by Appcelerator, Inc.
 */

// WARNING: this file is generated and will be overwritten
// Generated on <%=new Date%>

// if you're checking out this file, you should check us out too.
// http://jobs.appcelerator.com

/**
 * JSC implementation for <%=entry.framework%>/<%=entry.name%>
 */

<% imports.forEach(function(i) { -%>
@import <%=i%>;
<% }) -%>
<% autoincludes.forEach(function(i) { -%>
#import <<%=i%>>
<% }) -%>
#import <hyperloop.h>

// export our factory
<% if (entry.metatype==='interface') { -%>
JSObjectRef MakeObjectFor<%=entry.name%> (JSContextRef ctx, <%=entry.name%> *instance);
<% } else { -%>
JSObjectRef MakeObjectFor<%=entry.name%> (JSContextRef ctx, id<<%=entry.name%>> instance); 
<% } -%>

// types we use
<% makers.forEach(function(name) { 
	m = metadata.classes[name] || metadata.protocols[name],
	p = m.metatype=='protocol';
-%>
<% if(p){ -%>
extern JSObjectRef MakeObjectFor<%=name%>(JSContextRef, id<<%=name%>>);
<% } else { -%>
extern JSObjectRef MakeObjectFor<%=name%>(JSContextRef, <%=name%>*);
<% } -%>
<% }) %>

/**
 * helper static class that will generate a JSObjectRef
 */
@interface <%=entry.name%>Factory : NSObject<HyperloopFactory>
@end
