
@import JavaScriptCore;
<% imports.forEach(function(i) { -%>
@import <%=i%>;
<% }) -%>
<% _includes.forEach(function(i) { -%>
#import <%-i%>
<% }) -%>
<% externs.forEach(function(i) { -%>
<%-i%>
<% }) -%>

<%- object.externTypedef && object.externTypedef.join('\n') %>

@interface HyperloopFunctionPointerFor<%=object.mangledName%> : NSObject
@property (nonatomic,assign) JSContextRef ctx;
@property (nonatomic,assign) JSObjectRef thisObject;
@property (nonatomic,assign) JSObjectRef function;
@property (nonatomic,assign) JSValueRef userContext;
@end

@implementation HyperloopFunctionPointerFor<%=object.mangledName%> 

@synthesize ctx=ctx;
@synthesize thisObject=thisObject;
@synthesize function=function;
@synthesize userContext=userContext;

-(void)dealloc
{
	JSValueUnprotect(self.ctx,self.thisObject);
	JSValueUnprotect(self.ctx,self.function);
	self.ctx = NULL;
	self.thisObject = NULL;
	self.function = NULL;
	self.userContext = NULL;
	[super dealloc];
}

@end

<% if (callback) { -%>
/**
 * callback function pointer implementation
 */
<%-callback%>
<% } -%>

JSValueRef Hyperloop<%=object.mangledName%>ToJSValueRef(JSContextRef ctx, <%=object.simpleType%> function)
{
	return JSValueMakeUndefined(ctx);
}

<%=object.simpleType%> HyperloopJSValueRefTo<%=object.mangledName%>(JSContextRef context, JSObjectRef thisObject, JSValueRef userContext, JSValueRef value, JSValueRef *exception, bool *cleanup, void **replaceContext)
{
<% if (callback) { -%>
	JSObjectRef function = JSValueToObject(context,value,exception);
	JSContextRef ctx = HyperloopGetGlobalContext(context);
	HyperloopFunctionPointerFor<%=object.mangledName%> *callback = [[HyperloopFunctionPointerFor<%=object.mangledName%> new] autorelease];
	callback.ctx = ctx;
	callback.userContext = userContext;
	callback.thisObject = thisObject;
	callback.function = function;
	JSValueProtect(ctx,userContext);
	JSValueProtect(ctx,thisObject);
	JSValueProtect(ctx,function);
	*replaceContext = callback;
	return <%=classname%>;
<% } else { -%>
	[NSException raise:@"HyperloopFunctionPointerException" format:@"function pointer not supported for type <%-object.realtype%>",nil];
	return NULL;
<% } -%>
}

