/**
 * @preserve This generated code and related technologies are covered by patents
 * or patents pending by Appcelerator, Inc.
 * 
 * WARNING: this file is generated and will be overwritten
 * generated from <%=gen.filename%> on <%=new Date%>
 */
@import JavaScriptCore;
<% gen.imports.forEach(function(p) { -%>
@import <%=p%>;
<% }) -%>
<% gen.includes.forEach(function(h) { -%>
#import <<%=h%>>
<% }) -%>

@interface Ti$<%=gen.name%> : NSObject
@end

@implementation Ti$<%=gen.name%> 

+(NSData*)buffer
{
	static UInt8 data[] = { 
		<%=gen.jsBuffer %> 
	};
	return [NSData dataWithBytes:((void*)data) length:<%=gen.jsBuffer.length%>];
}

+(void)load:(JSValue*)object 
{
<% Object.keys(gen.statics).forEach(function(s) { -%>
	// <%=gen.statics[s].node.start.line%>:<%=gen.statics[s].node.start.line%> => <%-: gen.statics[s].source | source:'	' -%>
	object[@"<%=s%>"] = <%=gen.generateStatic(gen.ast,gen.statics[s],'	')%>;

<% }) -%>
<% Object.keys(gen.classes).forEach(function(c) { -%>
	// <%=gen.classes[c].node.start.line%>:<%=gen.classes[c].node.start.line%> => <%-: gen.classes[c].source | source:'	' -%>
	object[@"<%=c%>"] = [<%=c%> class];

<% }) -%>
<% Object.keys(gen.constructors).forEach(function(c) { -%>
	// <%=gen.constructors[c].node.start.line%>:<%=gen.constructors[c].node.start.line%> => <%-: gen.constructors[c].source | source:'	' -%>
	object[@"<%=c%>$Class"] = ^{
		return [[<%=c%> alloc] init];
	};
	
<% }) -%>
}

@end
