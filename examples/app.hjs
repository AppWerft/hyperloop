
@import('Foundation/NSLog');
@import('Foundation/NSString');
@import('Foundation/NSTimer');
@import('Foundation/NSRunLoop');
@import('Foundation/NSDefaultRunLoopMode');
@import('Foundation/NSDate');
@import('UIKit/UIApplication');
@import('UIKit/UIColor');
@import('UIKit/UIScreen');
@import('UIKit/UIView');
@import('UIKit/UILabel');
@import('UIKit/NSTextAlignmentCenter');
@import('UIKit/UICollectionViewLayout');
@import('UIKit/UIDynamicItem');
@import('UIKit/UIDynamicAnimator');
@import('UIKit/UIGravityBehavior');
@import('UIKit/UIDynamicBehavior');
@import('UIKit/UIDynamicAnimatorDelegate');
@import('UIKit/UICollisionBehavior');
@import('UIKit/UIBezierPath');
@import('CoreGraphics/CGRectMake');
@import('QuartzCore/CADisplayLink');


const screenSize = UIScreen.mainScreen().bounds.size;

// configure main window
var keyWindow = UIApplication.sharedApplication().keyWindow;
keyWindow.backgroundColor = UIColor.whiteColor();

var mainView = UIView.alloc().initWithFrame(UIScreen.mainScreen().applicationFrame);
mainView.backgroundColor = UIColor.blackColor();



var square = UIView.alloc().initWithFrame(CGRectMake(100, 100, 100, 100));
square.backgroundColor = UIColor.lightGrayColor();

var _animator = UIDynamicAnimator.alloc().initWithReferenceView(mainView);
var _gravity = UIGravityBehavior.alloc().initWithItems([square]);
_animator.addBehavior(_gravity);

mainView.addSubview(square);
keyWindow.addSubview(mainView);

/*
_animator = [[UIDynamicAnimator alloc] initWithReferenceView:mainView];
    _gravity = [[UIGravityBehavior alloc] initWithItems:@[square]];
    [_animator addBehavior:_gravity];
    
    _collision = [[UICollisionBehavior alloc] initWithItems:@[square]];
    _collision.translatesReferenceBoundsIntoBoundary = YES;
    [_animator addBehavior:_collision];
    
    // add a boundary that coincides with the top edge
    CGPoint rightEdge = CGPointMake(barrier.frame.origin.x +
                                    barrier.frame.size.width, barrier.frame.origin.y);
    [_collision addBoundaryWithIdentifier:@"barrier"
                                fromPoint:barrier.frame.origin
                                  toPoint:rightEdge];
    
    _collision.action =  ^{
        NSLog(@"%@, %@",
              NSStringFromCGAffineTransform(square.transform),
              NSStringFromCGPoint(square.center));
    };

 */